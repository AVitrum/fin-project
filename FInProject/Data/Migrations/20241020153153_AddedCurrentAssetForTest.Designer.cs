// <auto-generated />
using System;
using FInProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FInProject.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241020153153_AddedCurrentAssetForTest")]
    partial class AddedCurrentAssetForTest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FInProject.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AtEnd")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AtStart")
                        .HasColumnType("numeric");

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("FInProject.Models.CurrentAsset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CashAndCashEquivalentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CurrentBiologicalAssetsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CurrentFinancialInvestmentsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InventoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OtherCurrentAssetsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OtherCurrentReceivablesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PrepaidExpensesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReceivablesForGoodsAndServicesId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReceivablesForSettlementsAdvancesIssuedId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReceivablesForSettlementsBudgetId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReceivablesForSettlementsIncludingIncomeTaxId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SumId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CashAndCashEquivalentsId");

                    b.HasIndex("CurrentBiologicalAssetsId");

                    b.HasIndex("CurrentFinancialInvestmentsId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("OtherCurrentAssetsId");

                    b.HasIndex("OtherCurrentReceivablesId");

                    b.HasIndex("PrepaidExpensesId");

                    b.HasIndex("ReceivablesForGoodsAndServicesId");

                    b.HasIndex("ReceivablesForSettlementsAdvancesIssuedId");

                    b.HasIndex("ReceivablesForSettlementsBudgetId");

                    b.HasIndex("ReceivablesForSettlementsIncludingIncomeTaxId");

                    b.HasIndex("SumId");

                    b.ToTable("CurrentAssets");
                });

            modelBuilder.Entity("FInProject.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AdditionalSalary")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AuxiliaryMaterialCost")
                        .HasColumnType("numeric");

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ManufacturingOverheads")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("RawMaterialCost")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ScrapCost")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FInProject.Models.CurrentAsset", b =>
                {
                    b.HasOne("FInProject.Models.Asset", "CashAndCashEquivalents")
                        .WithMany()
                        .HasForeignKey("CashAndCashEquivalentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "CurrentBiologicalAssets")
                        .WithMany()
                        .HasForeignKey("CurrentBiologicalAssetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "CurrentFinancialInvestments")
                        .WithMany()
                        .HasForeignKey("CurrentFinancialInvestmentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "OtherCurrentAssets")
                        .WithMany()
                        .HasForeignKey("OtherCurrentAssetsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "OtherCurrentReceivables")
                        .WithMany()
                        .HasForeignKey("OtherCurrentReceivablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "PrepaidExpenses")
                        .WithMany()
                        .HasForeignKey("PrepaidExpensesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "ReceivablesForGoodsAndServices")
                        .WithMany()
                        .HasForeignKey("ReceivablesForGoodsAndServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "ReceivablesForSettlementsAdvancesIssued")
                        .WithMany()
                        .HasForeignKey("ReceivablesForSettlementsAdvancesIssuedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "ReceivablesForSettlementsBudget")
                        .WithMany()
                        .HasForeignKey("ReceivablesForSettlementsBudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "ReceivablesForSettlementsIncludingIncomeTax")
                        .WithMany()
                        .HasForeignKey("ReceivablesForSettlementsIncludingIncomeTaxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FInProject.Models.Asset", "Sum")
                        .WithMany()
                        .HasForeignKey("SumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashAndCashEquivalents");

                    b.Navigation("CurrentBiologicalAssets");

                    b.Navigation("CurrentFinancialInvestments");

                    b.Navigation("Inventory");

                    b.Navigation("OtherCurrentAssets");

                    b.Navigation("OtherCurrentReceivables");

                    b.Navigation("PrepaidExpenses");

                    b.Navigation("ReceivablesForGoodsAndServices");

                    b.Navigation("ReceivablesForSettlementsAdvancesIssued");

                    b.Navigation("ReceivablesForSettlementsBudget");

                    b.Navigation("ReceivablesForSettlementsIncludingIncomeTax");

                    b.Navigation("Sum");
                });
#pragma warning restore 612, 618
        }
    }
}
